{
	"nodes":[
		{"id":"93187f8145c8bbb1","type":"text","text":"```js\nconst { mutate, data, isPending, isSuccess, isError, error} = useLogin()\n```","x":-325,"y":-1460,"width":745,"height":81},
		{"id":"fef9ca437873b847","type":"text","text":"## Formik\n```js\n// Initialize formik\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n        },\n        validationSchema: validationSchema, // Add validationSchema here\n        onSubmit: (values) => {\n            // Debugging: Log the form values before submission\n            console.log('Form values on submit:', values);\n\n            // Here, if API expects 'username', pass 'email' as 'username'\n            mutate({\n                username: values.email, \n                password: values.password,\n            });\n        },\n    });\n```","x":-325,"y":-1340,"width":745,"height":500},
		{"id":"b7b3092a8de6949f","type":"text","text":"```js\nimport { useMutation } from '@tanstack/react-query';  \nimport { axiosInstance } from '../../lib/axios.js';  \n  \nconst useLogin = () => {  \n    return useMutation({  \n        mutationFn: async ({ username, password }) => {  \n            // Debugging: Log the data being sent to the backend  \n            console.log(\"Sending data to API:\", { username, password });  \n  \n            const loginResponse = await axiosInstance.post('/auth/login', {  \n                username,  // Make sure 'username' is what the API expects (not 'email')  \n                password,  \n            });  \n  \n            return loginResponse.data; // Returning the data (not the full response)  \n        },  \n        onError: (error) => {  \n            console.error(\"Login error:\", error.response || error.message);  \n        },  \n    });  \n};  \n  \nexport default useLogin;\n```","x":600,"y":-1420,"width":840,"height":560,"color":"5"},
		{"id":"4593bfb2b7fd10c6","type":"text","text":"```js\n//reset form on success\nconst [hasReset, setHasReset] = useState(false);\n// Handle success and reset form once login is successful\n  useEffect(() => {\n    if (data && !hasReset) {\n      // Reset form if mutation succeeds and form hasn't been reset yet\n      formik.resetForm();\n      setHasReset(true); // Mark the form as reset\n      console.log('Form reset after success:', data);\n    }\n  }, [data, formik, hasReset]); \n```","x":680,"y":-750,"width":694,"height":300},
		{"id":"f1f5f3e5e00b9ba7","type":"text","text":"```js\n//redirect to /dashboard on success\n// Redirect when login is successful  \nuseEffect(() => {  \n    if (isSuccess) {  \n        // Redirect to /dashboard when login is successful  \n        navigate('/dashboard', { replace: true });  \n    }  \n}, [isSuccess, navigate]);\n```","x":680,"y":-369,"width":694,"height":239},
		{"id":"b71a1eb08e609974","type":"text","text":"output","x":200,"y":-630,"width":120,"height":60,"color":"1"},
		{"id":"b21cfa3f43b61e10","type":"text","text":"## render error handling\n```js\n{formik.touched.password && formik.errors.password && (  \n    <div className=\"text-red-500\">{formik.errors.password}</div>  \n)}\n```","x":-800,"y":-750,"width":679,"height":197},
		{"id":"c10f8ccdfc67d64f","type":"text","text":"## Render the UI\n```javascript\nreturn (  \n    <section>  \n        <form onSubmit={formik.handleSubmit} >  \n            <label>  \n                <input type=\"text\" placeholder=\"Email\" name=\"email\"  value={formik.values.email}  \n                       onChange={handleFormInput}/>  \n                <span>Email</span>  \n            </label>  \n            <label>  \n                <input type=\"text\" placeholder=\"Password\" name=\"password\"  value={formik.values.password}  \n                       onChange={handleFormInput}/>  \n                <span>Password</span>  \n            </label>  \n            <button type=\"submit\" disabled={isPending}>{isPending ? 'Logging in...' : 'Login'}</button>\n        </form>   \n    </section>  \n)\n```","x":-1360,"y":-479,"width":959,"height":499},
		{"id":"29fb84af326e69b4","type":"text","text":"## Yup\n\n```js\n  // Yup validation schema\n  import * as Yup from 'yup';\n  const validationSchema = Yup.object({\n        email: Yup.string()\n            .email('Invalid email address')\n            .required('Email is required'),\n        password: Yup.string()\n            .min(6, 'Password must be at least 6 characters')\n            .required('Password is required'),\n    });\n```","x":-1201,"y":-1265,"width":601,"height":331},
		{"id":"1d639720482a714a","type":"text","text":"```js\n// Handle input changes  \nfunction handleFormInput(e) {  \n    e.preventDefault();  \n    formik.setFieldValue(e.target.name, e.target.value);  \n}\n```","x":-325,"y":-319,"width":745,"height":180}
	],
	"edges":[
		{"id":"0b137c2779eefa4c","fromNode":"93187f8145c8bbb1","fromSide":"left","toNode":"fef9ca437873b847","toSide":"left"},
		{"id":"d43ca34b581716b3","fromNode":"93187f8145c8bbb1","fromSide":"right","toNode":"b7b3092a8de6949f","toSide":"left","color":"5"},
		{"id":"9c6cfbb3c4e88ef5","fromNode":"1d639720482a714a","fromSide":"top","toNode":"fef9ca437873b847","toSide":"bottom"},
		{"id":"447d6f426a98a6ec","fromNode":"b71a1eb08e609974","fromSide":"right","toNode":"4593bfb2b7fd10c6","toSide":"left","color":"1","label":"(?)"},
		{"id":"691a0460a2160928","fromNode":"29fb84af326e69b4","fromSide":"right","toNode":"fef9ca437873b847","toSide":"left"},
		{"id":"4aee79445028da0a","fromNode":"fef9ca437873b847","fromSide":"left","toNode":"b21cfa3f43b61e10","toSide":"top"},
		{"id":"b45004dcb8fb87a5","fromNode":"c10f8ccdfc67d64f","fromSide":"right","toNode":"1d639720482a714a","toSide":"left"},
		{"id":"0864a9eda5e84207","fromNode":"b21cfa3f43b61e10","fromSide":"left","toNode":"c10f8ccdfc67d64f","toSide":"top"},
		{"id":"730b80bc988493e2","fromNode":"b71a1eb08e609974","fromSide":"right","toNode":"f1f5f3e5e00b9ba7","toSide":"left","color":"1"},
		{"id":"b6c093ec9a859fd8","fromNode":"b71a1eb08e609974","fromSide":"left","toNode":"b21cfa3f43b61e10","toSide":"right","color":"1"},
		{"id":"bd3bf017d09925bd","fromNode":"fef9ca437873b847","fromSide":"bottom","toNode":"b71a1eb08e609974","toSide":"top","color":"1"}
	]
}