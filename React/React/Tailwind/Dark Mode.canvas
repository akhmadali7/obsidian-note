{
	"nodes":[
		{"id":"7c549392c6f02c8c","x":-1069,"y":-340,"width":3149,"height":900,"type":"group","label":"Setup"},
		{"id":"6ce2f4d4a1cedc00","x":-1009,"y":-267,"width":569,"height":787,"type":"text","text":"```js\n//index.css\n@import url('https://fonts.cdnfonts.com/css/satoshi');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  * {\n    @apply font-sans;\n  }\n\n  /* ðŸŒž Light Mode (Default) */\n  :root {\n    --primary: #2563eb;\n    --secondary: #ff67d0;\n    --background: #ffffff;\n    --text: #1a1a1a;\n  }\n\n  /* ðŸŒ™ Dark Mode */\n  .dark {\n    --primary: #3b82f6;\n    --secondary: #16fd7989;\n    --background: #1a1a1a;\n    --text: #ffffff;\n  }\n\n  /* Apply the colors dynamically */\n  body {\n    @apply bg-background text-text;\n  }\n}\n\n```"},
		{"id":"7bec503e2920065a","x":-320,"y":-267,"width":920,"height":680,"type":"text","text":"```js\n//tailwind.config.js\n/** @type {import('tailwindcss').Config} */\nexport default {\n    content: [\n        \"./index.html\",\n        \"./src/**/*.{js,ts,jsx,tsx}\",\n    ],\n    theme: {\n        extend: {\n            fontFamily: {\n                sans: ['Satoshi', 'sans-serif'], // Add Satoshi as the default font for sans-serif\n            },\n            container: {\n                center: true\n            },\n            colors: {\n                primary: \"var(--primary)\", // Uses CSS variable instead of fixed value\n                secondary: \"var(--secondary)\",\n                background: \"var(--background)\",\n                text: \"var(--text)\",\n            },\n\n        },\n    },\n    plugins: [],\n}\n\n```"},
		{"id":"3e78a3b5c0380514","x":760,"y":-280,"width":1264,"height":693,"type":"text","text":"```js\nconst ToggleTheme = () => {\n    const [darkMode, setDarkMode] = useState(\n        localStorage.getItem(\"theme\") === \"dark\"\n    );\n\n    useEffect(() => {\n        if (darkMode) {\n            document.documentElement.classList.add(\"dark\");\n            localStorage.setItem(\"theme\", \"dark\");\n        } else {\n            document.documentElement.classList.remove(\"dark\");\n            localStorage.setItem(\"theme\", \"light\");\n        }\n    }, [darkMode]);\n\n    return (\n\n        <button\n            onClick={() => setDarkMode(!darkMode)}\n            className=\" p-3 w-max h-max rounded-full bg-accent text-black flex items-center justify-center  hover:bg-white/20 \"\n        >\n            {darkMode ?\n                <MdLightMode color=\"white\"/>\n                : <MdDarkMode color=\"white\"/>}\n        </button>\n\n    );\n}\n```"}
	],
	"edges":[
		{"id":"b4b8ef7414080a1e","fromNode":"6ce2f4d4a1cedc00","fromSide":"right","toNode":"7bec503e2920065a","toSide":"left"},
		{"id":"0dbd34eb3524a911","fromNode":"7bec503e2920065a","fromSide":"right","toNode":"3e78a3b5c0380514","toSide":"left"}
	]
}